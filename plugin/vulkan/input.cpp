#include "plugin/vulkan/input.h"
#include "engine/defines/keys.h"
#include "engine/central/archetype.h"
#include "engine/central/entity.h"
#include <GLFW/glfw3.h>
using namespace Kodanuki;

// Returns the GLFW key type from the kodanuki key type.
template <typename Key>
auto get_type() = delete;

// type map between kodanuki and glfw
#define MAP_TYPE(key) \
	template <> \
	auto get_type<key>() { \
		return GLFW_##key; \
	}

MAP_TYPE(KEY_SPACE); 
MAP_TYPE(KEY_APOSTROPHE);
MAP_TYPE(KEY_COMMA);
MAP_TYPE(KEY_MINUS);
MAP_TYPE(KEY_PERIOD);
MAP_TYPE(KEY_SLASH);
MAP_TYPE(KEY_0);
MAP_TYPE(KEY_1);
MAP_TYPE(KEY_2);
MAP_TYPE(KEY_3);
MAP_TYPE(KEY_4);
MAP_TYPE(KEY_5);
MAP_TYPE(KEY_6);
MAP_TYPE(KEY_7);
MAP_TYPE(KEY_8);
MAP_TYPE(KEY_9);
MAP_TYPE(KEY_SEMICOLON);
MAP_TYPE(KEY_EQUAL);
MAP_TYPE(KEY_A);
MAP_TYPE(KEY_B);
MAP_TYPE(KEY_C);
MAP_TYPE(KEY_D);
MAP_TYPE(KEY_E);
MAP_TYPE(KEY_F);
MAP_TYPE(KEY_G);
MAP_TYPE(KEY_H);
MAP_TYPE(KEY_I);
MAP_TYPE(KEY_J);
MAP_TYPE(KEY_K);
MAP_TYPE(KEY_L);
MAP_TYPE(KEY_M);
MAP_TYPE(KEY_N);
MAP_TYPE(KEY_O);
MAP_TYPE(KEY_P);
MAP_TYPE(KEY_Q);
MAP_TYPE(KEY_R);
MAP_TYPE(KEY_S);
MAP_TYPE(KEY_T);
MAP_TYPE(KEY_U);
MAP_TYPE(KEY_V);
MAP_TYPE(KEY_W);
MAP_TYPE(KEY_X);
MAP_TYPE(KEY_Y);
MAP_TYPE(KEY_Z);
MAP_TYPE(KEY_LEFT_BRACKET);
MAP_TYPE(KEY_BACKSLASH);
MAP_TYPE(KEY_RIGHT_BRACKET);
MAP_TYPE(KEY_GRAVE_ACCENT);
MAP_TYPE(KEY_WORLD_1);
MAP_TYPE(KEY_WORLD_2);
MAP_TYPE(KEY_ESCAPE);
MAP_TYPE(KEY_ENTER);
MAP_TYPE(KEY_TAB);
MAP_TYPE(KEY_BACKSPACE);
MAP_TYPE(KEY_INSERT);
MAP_TYPE(KEY_DELETE);
MAP_TYPE(KEY_RIGHT);
MAP_TYPE(KEY_LEFT);
MAP_TYPE(KEY_DOWN);
MAP_TYPE(KEY_UP);
MAP_TYPE(KEY_PAGE_UP);
MAP_TYPE(KEY_PAGE_DOWN);
MAP_TYPE(KEY_HOME);
MAP_TYPE(KEY_END);
MAP_TYPE(KEY_CAPS_LOCK);
MAP_TYPE(KEY_SCROLL_LOCK);
MAP_TYPE(KEY_NUM_LOCK);
MAP_TYPE(KEY_PRINT_SCREEN);
MAP_TYPE(KEY_PAUSE);
MAP_TYPE(KEY_F1);
MAP_TYPE(KEY_F2);
MAP_TYPE(KEY_F3);
MAP_TYPE(KEY_F4);
MAP_TYPE(KEY_F5);
MAP_TYPE(KEY_F6);
MAP_TYPE(KEY_F7);
MAP_TYPE(KEY_F8);
MAP_TYPE(KEY_F9);
MAP_TYPE(KEY_F10);
MAP_TYPE(KEY_F11);
MAP_TYPE(KEY_F12);
MAP_TYPE(KEY_F13);
MAP_TYPE(KEY_F14);
MAP_TYPE(KEY_F15);
MAP_TYPE(KEY_F16);
MAP_TYPE(KEY_F17);
MAP_TYPE(KEY_F18);
MAP_TYPE(KEY_F19);
MAP_TYPE(KEY_F20);
MAP_TYPE(KEY_F21);
MAP_TYPE(KEY_F22);
MAP_TYPE(KEY_F23);
MAP_TYPE(KEY_F24);
MAP_TYPE(KEY_F25);
MAP_TYPE(KEY_KP_0);
MAP_TYPE(KEY_KP_1);
MAP_TYPE(KEY_KP_2);
MAP_TYPE(KEY_KP_3);
MAP_TYPE(KEY_KP_4);
MAP_TYPE(KEY_KP_5);
MAP_TYPE(KEY_KP_6);
MAP_TYPE(KEY_KP_7);
MAP_TYPE(KEY_KP_8);
MAP_TYPE(KEY_KP_9);
MAP_TYPE(KEY_KP_DECIMAL);
MAP_TYPE(KEY_KP_DIVIDE);
MAP_TYPE(KEY_KP_MULTIPLY);
MAP_TYPE(KEY_KP_SUBTRACT);
MAP_TYPE(KEY_KP_ADD);
MAP_TYPE(KEY_KP_ENTER);
MAP_TYPE(KEY_KP_EQUAL);
MAP_TYPE(KEY_LEFT_SHIFT);
MAP_TYPE(KEY_LEFT_CONTROL);
MAP_TYPE(KEY_LEFT_ALT);
MAP_TYPE(KEY_LEFT_SUPER);
MAP_TYPE(KEY_RIGHT_SHIFT);
MAP_TYPE(KEY_RIGHT_CONTROL);
MAP_TYPE(KEY_RIGHT_ALT);
MAP_TYPE(KEY_RIGHT_SUPER);
MAP_TYPE(KEY_MENU);

#undef MAP_TYPE

template <typename Key>
void system_update_key_receiver(GLFWwindow* window)
{
	switch (glfwGetKey(window, get_type<Key>())) {
	case GLFW_PRESS:
		ECS::iterate<Archetype<Require<KeyReceiver>, Produce<Key>>>();
		break;
	case GLFW_RELEASE:
		ECS::iterate<Archetype<Require<KeyReceiver>, Consume<Key>>>();
		break;
	}
}

#define EXPLICIT_INITIALIZE(key) \
	template void system_update_key_receiver<key>(GLFWwindow*)

EXPLICIT_INITIALIZE(KEY_SPACE); 
EXPLICIT_INITIALIZE(KEY_APOSTROPHE);
EXPLICIT_INITIALIZE(KEY_COMMA);
EXPLICIT_INITIALIZE(KEY_MINUS);
EXPLICIT_INITIALIZE(KEY_PERIOD);
EXPLICIT_INITIALIZE(KEY_SLASH);
EXPLICIT_INITIALIZE(KEY_0);
EXPLICIT_INITIALIZE(KEY_1);
EXPLICIT_INITIALIZE(KEY_2);
EXPLICIT_INITIALIZE(KEY_3);
EXPLICIT_INITIALIZE(KEY_4);
EXPLICIT_INITIALIZE(KEY_5);
EXPLICIT_INITIALIZE(KEY_6);
EXPLICIT_INITIALIZE(KEY_7);
EXPLICIT_INITIALIZE(KEY_8);
EXPLICIT_INITIALIZE(KEY_9);
EXPLICIT_INITIALIZE(KEY_SEMICOLON);
EXPLICIT_INITIALIZE(KEY_EQUAL);
EXPLICIT_INITIALIZE(KEY_A);
EXPLICIT_INITIALIZE(KEY_B);
EXPLICIT_INITIALIZE(KEY_C);
EXPLICIT_INITIALIZE(KEY_D);
EXPLICIT_INITIALIZE(KEY_E);
EXPLICIT_INITIALIZE(KEY_F);
EXPLICIT_INITIALIZE(KEY_G);
EXPLICIT_INITIALIZE(KEY_H);
EXPLICIT_INITIALIZE(KEY_I);
EXPLICIT_INITIALIZE(KEY_J);
EXPLICIT_INITIALIZE(KEY_K);
EXPLICIT_INITIALIZE(KEY_L);
EXPLICIT_INITIALIZE(KEY_M);
EXPLICIT_INITIALIZE(KEY_N);
EXPLICIT_INITIALIZE(KEY_O);
EXPLICIT_INITIALIZE(KEY_P);
EXPLICIT_INITIALIZE(KEY_Q);
EXPLICIT_INITIALIZE(KEY_R);
EXPLICIT_INITIALIZE(KEY_S);
EXPLICIT_INITIALIZE(KEY_T);
EXPLICIT_INITIALIZE(KEY_U);
EXPLICIT_INITIALIZE(KEY_V);
EXPLICIT_INITIALIZE(KEY_W);
EXPLICIT_INITIALIZE(KEY_X);
EXPLICIT_INITIALIZE(KEY_Y);
EXPLICIT_INITIALIZE(KEY_Z);
EXPLICIT_INITIALIZE(KEY_LEFT_BRACKET);
EXPLICIT_INITIALIZE(KEY_BACKSLASH);
EXPLICIT_INITIALIZE(KEY_RIGHT_BRACKET);
EXPLICIT_INITIALIZE(KEY_GRAVE_ACCENT);
EXPLICIT_INITIALIZE(KEY_WORLD_1);
EXPLICIT_INITIALIZE(KEY_WORLD_2);
EXPLICIT_INITIALIZE(KEY_ESCAPE);
EXPLICIT_INITIALIZE(KEY_ENTER);
EXPLICIT_INITIALIZE(KEY_TAB);
EXPLICIT_INITIALIZE(KEY_BACKSPACE);
EXPLICIT_INITIALIZE(KEY_INSERT);
EXPLICIT_INITIALIZE(KEY_DELETE);
EXPLICIT_INITIALIZE(KEY_RIGHT);
EXPLICIT_INITIALIZE(KEY_LEFT);
EXPLICIT_INITIALIZE(KEY_DOWN);
EXPLICIT_INITIALIZE(KEY_UP);
EXPLICIT_INITIALIZE(KEY_PAGE_UP);
EXPLICIT_INITIALIZE(KEY_PAGE_DOWN);
EXPLICIT_INITIALIZE(KEY_HOME);
EXPLICIT_INITIALIZE(KEY_END);
EXPLICIT_INITIALIZE(KEY_CAPS_LOCK);
EXPLICIT_INITIALIZE(KEY_SCROLL_LOCK);
EXPLICIT_INITIALIZE(KEY_NUM_LOCK);
EXPLICIT_INITIALIZE(KEY_PRINT_SCREEN);
EXPLICIT_INITIALIZE(KEY_PAUSE);
EXPLICIT_INITIALIZE(KEY_F1);
EXPLICIT_INITIALIZE(KEY_F2);
EXPLICIT_INITIALIZE(KEY_F3);
EXPLICIT_INITIALIZE(KEY_F4);
EXPLICIT_INITIALIZE(KEY_F5);
EXPLICIT_INITIALIZE(KEY_F6);
EXPLICIT_INITIALIZE(KEY_F7);
EXPLICIT_INITIALIZE(KEY_F8);
EXPLICIT_INITIALIZE(KEY_F9);
EXPLICIT_INITIALIZE(KEY_F10);
EXPLICIT_INITIALIZE(KEY_F11);
EXPLICIT_INITIALIZE(KEY_F12);
EXPLICIT_INITIALIZE(KEY_F13);
EXPLICIT_INITIALIZE(KEY_F14);
EXPLICIT_INITIALIZE(KEY_F15);
EXPLICIT_INITIALIZE(KEY_F16);
EXPLICIT_INITIALIZE(KEY_F17);
EXPLICIT_INITIALIZE(KEY_F18);
EXPLICIT_INITIALIZE(KEY_F19);
EXPLICIT_INITIALIZE(KEY_F20);
EXPLICIT_INITIALIZE(KEY_F21);
EXPLICIT_INITIALIZE(KEY_F22);
EXPLICIT_INITIALIZE(KEY_F23);
EXPLICIT_INITIALIZE(KEY_F24);
EXPLICIT_INITIALIZE(KEY_F25);
EXPLICIT_INITIALIZE(KEY_KP_0);
EXPLICIT_INITIALIZE(KEY_KP_1);
EXPLICIT_INITIALIZE(KEY_KP_2);
EXPLICIT_INITIALIZE(KEY_KP_3);
EXPLICIT_INITIALIZE(KEY_KP_4);
EXPLICIT_INITIALIZE(KEY_KP_5);
EXPLICIT_INITIALIZE(KEY_KP_6);
EXPLICIT_INITIALIZE(KEY_KP_7);
EXPLICIT_INITIALIZE(KEY_KP_8);
EXPLICIT_INITIALIZE(KEY_KP_9);
EXPLICIT_INITIALIZE(KEY_KP_DECIMAL);
EXPLICIT_INITIALIZE(KEY_KP_DIVIDE);
EXPLICIT_INITIALIZE(KEY_KP_MULTIPLY);
EXPLICIT_INITIALIZE(KEY_KP_SUBTRACT);
EXPLICIT_INITIALIZE(KEY_KP_ADD);
EXPLICIT_INITIALIZE(KEY_KP_ENTER);
EXPLICIT_INITIALIZE(KEY_KP_EQUAL);
EXPLICIT_INITIALIZE(KEY_LEFT_SHIFT);
EXPLICIT_INITIALIZE(KEY_LEFT_CONTROL);
EXPLICIT_INITIALIZE(KEY_LEFT_ALT);
EXPLICIT_INITIALIZE(KEY_LEFT_SUPER);
EXPLICIT_INITIALIZE(KEY_RIGHT_SHIFT);
EXPLICIT_INITIALIZE(KEY_RIGHT_CONTROL);
EXPLICIT_INITIALIZE(KEY_RIGHT_ALT);
EXPLICIT_INITIALIZE(KEY_RIGHT_SUPER);
EXPLICIT_INITIALIZE(KEY_MENU);

#undef EXPLICIT_INITIALIZE

