/**
 * The compute shader for the fluid simulation.
 *
 * The shader will contain everything to update the SPH
 * fluid simulation. Currently only moves particles in
 * some given direction.
 */
#version 450
#define M_PI 3.1415926535897932384626433832795

layout (local_size_x = 128) in;

layout (binding = 0) uniform UD {
	float delta_time;
	float kernel_size;
	float stiffness;
	float rho_0;
	float gravity;
	float viscosity;
	uint particle_count;
} ud;

layout (binding = 1) buffer pos1 { vec4 inPosition[]; };
layout (binding = 2) buffer vel1 { vec4 inVelocity[]; };
layout (binding = 3) buffer mass { float inMass[]; };
layout (binding = 4) buffer dens { float inDensity[]; };
layout (binding = 5) buffer pres { float inPressure[]; };
layout (binding = 6) buffer pos2 { vec4 outPosition[]; };
layout (binding = 7) buffer vel2 { vec4 outVelocity[]; };

void main()
{
	const uint gID = gl_GlobalInvocationID.x;
	const uint xID = gl_LocalInvocationID.x;

	if (ud.particle_count <= gID) {
		return;
	}

	// Placeholder for some more complicated calculation.
	outPosition[gID].xyz = inPosition[gID].xyz + ud.delta_time * inVelocity[gID].xyz;
	outVelocity[gID].xyz = inVelocity[gID].xyz;
}
